/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/api/20220120/GetDepartureBoard/{crs}': {
		get: operations['_20220120_GetDepartureBoard'];
	};
	'/api/20220120/GetArrivalBoard/{crs}': {
		get: operations['_20220120_GetArrivalBoard'];
	};
	'/api/20220120/GetArrivalDepartureBoard/{crs}': {
		get: operations['_20220120_GetArrivalDepartureBoard'];
	};
	'/api/20220120/GetArrBoardWithDetails/{crs}': {
		get: operations['_20220120_GetArrBoardWithDetails'];
	};
	'/api/20220120/GetDepBoardWithDetails/{crs}': {
		get: operations['_20220120_GetDepBoardWithDetails'];
	};
	'/api/20220120/GetArrDepBoardWithDetails/{crs}': {
		get: operations['_20220120_GetArrDepBoardWithDetails'];
	};
	'/api/20220120/GetFastestDepartures/{crs}/{filterList}': {
		get: operations['_20220120_GetFastestDepartures'];
	};
	'/api/20220120/GetFastestDeparturesWithDetails/{crs}/{filterList}': {
		get: operations['_20220120_GetFastestDeparturesWithDetails'];
	};
	'/api/20220120/GetNextDepartures/{crs}/{filterList}': {
		get: operations['_20220120_GetNextDepartures'];
	};
	'/api/20220120/GetNextDeparturesWithDetails/{crs}/{filterList}': {
		get: operations['_20220120_GetNextDeparturesWithDetails'];
	};
	'/api/20220120/GetServiceDetails/{serviceid}': {
		get: operations['_20220120_GetServiceDetails'];
	};
}

export interface definitions {
	StationBoard: {
		trainServices?: definitions['ServiceItem'][];
		busServices?: definitions['ServiceItem'][];
		ferryServices?: definitions['ServiceItem'][];
		Xmlns?: definitions['XmlSerializerNamespaces'];
		/** Format: date-time */
		generatedAt?: string;
		locationName?: string;
		crs?: string;
		filterLocationName?: string;
		filtercrs?: string;
		/** @enum {string} */
		filterType?: 'to' | 'from';
		nrccMessages?: definitions['NRCCMessage'][];
		platformAvailable?: boolean;
		areServicesAvailable?: boolean;
	};
	ServiceItem: {
		formation?: definitions['FormationData'];
		origin?: definitions['ServiceLocation'][];
		destination?: definitions['ServiceLocation'][];
		currentOrigins?: definitions['ServiceLocation'][];
		currentDestinations?: definitions['ServiceLocation'][];
		rsid?: string;
		sta?: string;
		eta?: string;
		std?: string;
		etd?: string;
		platform?: string;
		operator?: string;
		operatorCode?: string;
		isCircularRoute?: boolean;
		isCancelled?: boolean;
		filterLocationCancelled?: boolean;
		/** @enum {string} */
		serviceType?: 'train' | 'bus' | 'ferry';
		/** Format: int32 */
		length?: number;
		detachFront?: boolean;
		isReverseFormation?: boolean;
		cancelReason?: string;
		delayReason?: string;
		serviceID: string;
		adhocAlerts?: string[];
	};
	XmlSerializerNamespaces: {
		/** Format: int32 */
		Count?: number;
	};
	NRCCMessage: {
		Value?: string;
	};
	FormationData: {
		loadingCategory?: definitions['LoadingCategory'];
		coaches?: definitions['CoachData'][];
	};
	ServiceLocation: {
		locationName?: string;
		crs?: string;
		via?: string;
		futureChangeTo?: string;
		assocIsCancelled?: boolean;
	};
	LoadingCategory: {
		code?: string;
		colour?: string;
		image?: string;
		Value?: string;
	};
	CoachData: {
		coachClass?: string;
		toilet?: definitions['ToiletAvailabilityType'];
		/** Format: int32 */
		loading?: number;
		loadingSpecified?: boolean;
		number?: string;
	};
	ToiletAvailabilityType: {
		/** @enum {string} */
		status?: 'Unknown' | 'InService' | 'NotInService';
		Value?: string;
	};
	StationBoardWithDetails: {
		trainServices?: definitions['ServiceItemWithCallingPoints'][];
		busServices?: definitions['ServiceItemWithCallingPoints'][];
		ferryServices?: definitions['ServiceItemWithCallingPoints'][];
		Xmlns?: definitions['XmlSerializerNamespaces'];
		/** Format: date-time */
		generatedAt?: string;
		locationName?: string;
		crs?: string;
		filterLocationName?: string;
		filtercrs?: string;
		/** @enum {string} */
		filterType?: 'to' | 'from';
		nrccMessages?: definitions['NRCCMessage'][];
		platformAvailable?: boolean;
		areServicesAvailable?: boolean;
	};
	ServiceItemWithCallingPoints: {
		previousCallingPoints?: definitions['ArrayOfCallingPoints'][];
		subsequentCallingPoints?: definitions['ArrayOfCallingPoints'][];
		formation?: definitions['FormationData'];
		origin?: definitions['ServiceLocation'][];
		destination?: definitions['ServiceLocation'][];
		currentOrigins?: definitions['ServiceLocation'][];
		currentDestinations?: definitions['ServiceLocation'][];
		rsid?: string;
		sta?: string;
		eta?: string;
		std?: string;
		etd?: string;
		platform?: string;
		operator?: string;
		operatorCode?: string;
		isCircularRoute?: boolean;
		isCancelled?: boolean;
		filterLocationCancelled?: boolean;
		/** @enum {string} */
		serviceType?: 'train' | 'bus' | 'ferry';
		/** Format: int32 */
		length?: number;
		detachFront?: boolean;
		isReverseFormation?: boolean;
		cancelReason?: string;
		delayReason?: string;
		serviceID?: string;
		adhocAlerts?: string[];
	};
	ArrayOfCallingPoints: {
		callingPoint?: definitions['CallingPoint'][];
		/** @enum {string} */
		serviceType?: 'train' | 'bus' | 'ferry';
		serviceChangeRequired?: boolean;
		assocIsCancelled?: boolean;
	};
	CallingPoint: {
		locationName?: string;
		crs?: string;
		st?: string;
		et?: string;
		at?: string;
		isCancelled?: boolean;
		/** Format: int32 */
		length?: number;
		detachFront?: boolean;
		formation?: definitions['FormationData'];
		adhocAlerts?: string[];
	};
	DeparturesBoard: {
		departures?: definitions['DepartureItem'][];
		Xmlns?: definitions['XmlSerializerNamespaces'];
		/** Format: date-time */
		generatedAt?: string;
		locationName?: string;
		crs?: string;
		filterLocationName?: string;
		filtercrs?: string;
		/** @enum {string} */
		filterType?: 'to' | 'from';
		nrccMessages?: definitions['NRCCMessage'][];
		platformAvailable?: boolean;
		areServicesAvailable?: boolean;
	};
	DepartureItem: {
		service?: definitions['ServiceItem'];
		crs?: string;
	};
	DeparturesBoardWithDetails: {
		departures?: definitions['DepartureItemWithCallingPoints'][];
		Xmlns?: definitions['XmlSerializerNamespaces'];
		/** Format: date-time */
		generatedAt?: string;
		locationName?: string;
		crs?: string;
		filterLocationName?: string;
		filtercrs?: string;
		/** @enum {string} */
		filterType?: 'to' | 'from';
		nrccMessages?: definitions['NRCCMessage'][];
		platformAvailable?: boolean;
		areServicesAvailable?: boolean;
	};
	DepartureItemWithCallingPoints: {
		service?: definitions['ServiceItemWithCallingPoints'];
		crs?: string;
	};
	ServiceDetails: {
		adhocAlerts?: string[];
		formation?: definitions['FormationData'];
		previousCallingPoints?: definitions['ArrayOfCallingPoints'][];
		subsequentCallingPoints?: definitions['ArrayOfCallingPoints'][];
		/** Format: date-time */
		generatedAt?: string;
		/** @enum {string} */
		serviceType?: 'train' | 'bus' | 'ferry';
		locationName?: string;
		crs?: string;
		operator?: string;
		operatorCode?: string;
		rsid?: string;
		isCancelled?: boolean;
		cancelReason?: string;
		delayReason?: string;
		overdueMessage?: string;
		/** Format: int32 */
		length?: number;
		detachFront?: boolean;
		isReverseFormation?: boolean;
		platform?: string;
		sta?: string;
		eta?: string;
		ata?: string;
		std?: string;
		etd?: string;
		atd?: string;
		Xmlns?: definitions['XmlSerializerNamespaces'];
	};
}

export interface operations {
	_20220120_GetDepartureBoard: {
		parameters: {
			path: {
				crs: string;
			};
			query: {
				numRows?: number;
				filterCrs?: string;
				filterType?: 'to' | 'from';
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['StationBoard'];
			};
		};
	};
	_20220120_GetArrivalBoard: {
		parameters: {
			path: {
				crs: string;
			};
			query: {
				numRows?: number;
				filterCrs?: string;
				filterType?: 'to' | 'from';
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['StationBoard'];
			};
		};
	};
	_20220120_GetArrivalDepartureBoard: {
		parameters: {
			path: {
				crs: string;
			};
			query: {
				numRows?: number;
				filterCrs?: string;
				filterType?: 'to' | 'from';
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['StationBoard'];
			};
		};
	};
	_20220120_GetArrBoardWithDetails: {
		parameters: {
			path: {
				crs: string;
			};
			query: {
				numRows?: number;
				filterCrs?: string;
				filterType?: 'to' | 'from';
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['StationBoardWithDetails'];
			};
		};
	};
	_20220120_GetDepBoardWithDetails: {
		parameters: {
			path: {
				crs: string;
			};
			query: {
				numRows?: number;
				filterCrs?: string;
				filterType?: 'to' | 'from';
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['StationBoardWithDetails'];
			};
		};
	};
	_20220120_GetArrDepBoardWithDetails: {
		parameters: {
			path: {
				crs: string;
			};
			query: {
				numRows?: number;
				filterCrs?: string;
				filterType?: 'to' | 'from';
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['StationBoardWithDetails'];
			};
		};
	};
	_20220120_GetFastestDepartures: {
		parameters: {
			path: {
				crs: string;
				filterList: string;
			};
			query: {
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['DeparturesBoard'];
			};
		};
	};
	_20220120_GetFastestDeparturesWithDetails: {
		parameters: {
			path: {
				crs: string;
				filterList: string;
			};
			query: {
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['DeparturesBoardWithDetails'];
			};
		};
	};
	_20220120_GetNextDepartures: {
		parameters: {
			path: {
				crs: string;
				filterList: string;
			};
			query: {
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['DeparturesBoard'];
			};
		};
	};
	_20220120_GetNextDeparturesWithDetails: {
		parameters: {
			path: {
				crs: string;
				filterList: string;
			};
			query: {
				timeOffset?: number;
				timeWindow?: number;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['DeparturesBoardWithDetails'];
			};
		};
	};
	_20220120_GetServiceDetails: {
		parameters: {
			path: {
				serviceid: string;
			};
		};
		responses: {
			/** OK */
			200: {
				schema: definitions['ServiceDetails'];
			};
		};
	};
}
